name: Build and Push CI4 Docker Image

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

env:
  REGISTRY: cr.jri.one
  IMAGE_NAME: jrione/it-edu

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up HashiCorp Vault
      uses: hashicorp/vault-action@v2
      with:
        url: ${{ secrets.VAULT_URL }}
        method: token
        token: ${{ secrets.VAULT_TOKEN }}

    - name: Get secrets from Vault and create .env file
      run: |
        vault kv-get -format=json config/it-edu | jq -r '.data.data | to_entries[] | "\(.key)=\(.value)"' > .env
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Registry cr.jri.one
      uses: docker/login-action@v3
      with:
      registry: ${{ env.REGISTRY }}
      username: ${{ secrets.DOCKER_USERNAME }}
      password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha 

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./containerized/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Clean up
      run: |
        rm -f .env
